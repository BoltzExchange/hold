name: CI

on: [ push, pull_request ]

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        python-version: [ '3.10' ]
        rust-version: [ stable, nightly ]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get -y install protobuf-compiler

      - name: Use Rust toolchain
        run: rustup update ${{ matrix.rust-version }} && rustup default ${{ matrix.rust-version }}

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install clippy
        run: rustup component add clippy

      - name: Compile
        run: cargo build

      - name: Format
        run: cargo fmt --check

      - name: Clippy
        run: cargo clippy

      - name: Unit tests
        run: cargo test

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3

      - name: Install Python dependencies
        run: make python-install

      - name: Python lint
        run: make python-lint

      - name: Python formatting
        run: poetry run ruff format --check
        working-directory: ./tests-regtest

      - name: Regtest startup
        run: make regtest-start

      - name: Integration tests
        run: make integration-tests
